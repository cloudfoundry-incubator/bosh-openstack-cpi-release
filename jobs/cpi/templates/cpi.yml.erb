cloud:
  plugin: openstack
  properties:
    openstack:
      auth_url: <%= p("openstack.auth_url") %>
      username: <%= p("openstack.username") %>
      api_key: <%= p("openstack.api_key") %>
      tenant: <%= p("openstack.tenant") %>
      <% if_p("openstack.region") do |region| %>
      region: <%= region %>
      <% end %>
      <% if_p("openstack.endpoint_type") do |endpoint_type| %>
      endpoint_type: <%= endpoint_type %>
      <% end %>
      <% if_p("openstack.state_timeout") do |state_timeout| %>
      state_timeout: <%= state_timeout %>
      <% end %>
      <% if_p("openstack.stemcell_public_visibility") do |stemcell_public_visibility| %>
      stemcell_public_visibility: <%= stemcell_public_visibility %>
      <% end %>
      <% if_p('openstack.connection_options') do |connection_options| %>
      connection_options: <%= JSON.generate(connection_options) %>
      <% end %>
      <% if_p("openstack.boot_from_volume") do |boot_from_volume| %>
      boot_from_volume: <%= boot_from_volume %>
      <% end %>
      default_key_name: <%= p("openstack.default_key_name") %>
      default_security_groups: <%= p("openstack.default_security_groups") %>
      wait_resource_poll_interval: <%= p("openstack.wait_resource_poll_interval") %>
      <% if_p("openstack.config_drive") do |config_drive| %>
      config_drive: <%= config_drive %>
      <% end %>
    registry:
      endpoint: http://<%= p("registry.host") %>:<%= p("registry.port") %>
      user: <%= p("registry.username") %>
      password: <%= p("registry.password") %>
      address: <%= p("registry.host") %>
      http:
        port: <%= p("registry.port") %>
        user: <%= p("registry.username") %>
        password: <%= p("registry.password") %>

    agent:
      ntp: [<%= p('ntp').join(", ") %>]

    <% if_p('blobstore') do %>
      blobstore:
        provider: <%= p('blobstore.provider') %>
        options:
      <% if p('blobstore.provider') == 's3' %>
          bucket_name: <%= p('blobstore.bucket_name') %>
          access_key_id: <%= p(['agent.blobstore.access_key_id', 'blobstore.access_key_id']) %>
          secret_access_key: <%= p(['agent.blobstore.secret_access_key', 'blobstore.secret_access_key']) %>
        <% if_p('blobstore.host') do |host| %>
          host: <%= host %>
        <% end %>
        <% if_p('blobstore.s3_port') do |port| %>
          port: <%= port %>
        <% end %>
        <% if_p('blobstore.use_ssl') do |use_ssl| %>
          use_ssl: <%= use_ssl %>
        <% end %>
        <% if_p('blobstore.ssl_verify_peer') do |ssl_verify_peer| %>
          ssl_verify_peer: <%= ssl_verify_peer %>
        <% end %>
      <% elsif p('blobstore.provider') == 'local' %>
          blobstore_path: <%= p('blobstore.path') %>
      <% else %>
          endpoint: 'http://<%= p(['agent.blobstore.address', 'blobstore.address']) %>:<%= p('blobstore.port') %>'
          user: <%= p('blobstore.agent.user') %>
          password: <%= p('blobstore.agent.password') %>
      <% end %>
    <% end %>

    <% if_p('agent.mbus') do |mbus| %>
      mbus: <%= mbus %>
    <% end.else_if_p('nats') do %>
      mbus: nats://<%= p('nats.user') %>:<%= p('nats.password') %>@<%= p(['agent.nats.address', 'nats.address']) %>:<%= p('nats.port') %>
    <% end %>
